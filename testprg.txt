using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp9
{
    class Program
    {
        static void Main(string[] args)
        {

            Console.WriteLine("zadejte číslo");
            int cislo = int.Parse(Console.ReadLine());
            
            
            int sude = suda(cislo);
            int vysledek = soucet(cislo);
            int liche = licha(cislo);
            long faktory = faktorial(cislo);
            long cifra = cifer(cislo);

            
            Console.WriteLine($"{vysledek}");
            Console.WriteLine($"{sude}");
            Console.WriteLine($"{liche}");
            Console.WriteLine($"{faktory}");

            Console.WriteLine("vysledek fibonacci");

            for (int i = 0; i < 8; i++)
            {
                int fibonacci = fibonaccy(i);
                Console.Write($"{fibonacci}");
                if (i < 7)
                {
                    Console.Write(",");
                }
            }

            Console.WriteLine();
            int fibonacci2 = fibonaccy(cislo);
            Console.WriteLine($"hodnota pro {cislo}. člen fibonacci posloupnosti je:");
            Console.WriteLine($"{fibonacci2}");
            Console.WriteLine($"{cifra}");
        }


        static int soucet(int a)
        {
            if (a <= 0)
            {
                return 0;

            }

            else
            {
                return a + soucet(a - 1);
            }
        }

        static int suda(int a)
        {
            if (a <= 0)
            {
                return 0;
            }

            else if (a % 2 == 0)
            {
                return a + suda(a - 2);
            }
            else
            {
                a = a - 1;
                return a + suda(a - 2);
            }
        }

        static int licha(int a)
        {
            if (a <= 0)
            {
                return 0;
            }

            else if (a % 2 == 1)
            {

                return a + licha(a - 2);
            }
            else
            {
                a = a - 1;
                return a + licha(a - 2);
            }
        }


        static long faktorial(int a)
        {
            if (a == 0)
            {
                return 1;
            }

            else
            {
                return a * faktorial(a - 1);
            }

        }


        static int fibonaccy(int a)
        {

            if (a < 2)
            {
                return a;

            }

            else
            {
                return fibonaccy(a - 1) + fibonaccy(a - 2);

            }
        }


        static long  cifer(long a)
        {
            if (a < 10 & a >= 0) 
            {
                return 1;
            }

            else if (a > 0)
            {
                return 1 + cifer(a / 10);
            }

            else 
            {
                return 1 + cifer((a * (-1)) / 10);
            }
        }
    }
}